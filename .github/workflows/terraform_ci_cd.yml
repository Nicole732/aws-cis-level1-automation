name: Terraform CI/CD Pipeline

#pipeline is triggered on pull request from and pushes on main
on:
  push:
    branches:
      - main
      
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  terraform:
    name: Validate & Deploy Terraform
    runs-on: ubuntu-latest

    env:
      TF_WORKSPACE: default
      AWS_REGION: us-east-1

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # authenticates with AWS
      - name: 'Configure AWS credentials'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Set up Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      # Terraform FMT
      - name: Terraform Format
        working-directory: env/dev
        run: terraform fmt -check -recursive || echo "⚠️ Some files are not formatted"

      # Terraform Init
      - name: Terraform Init
        working-directory: env/dev
        run: terraform init

      # Terraform Validate
      - name: Terraform Validate
        working-directory: env/dev
        run: terraform validate

      # Terraform Planjusiing terraform.tfvars
      - name: Terraform Plan 
        working-directory: env/dev
        run: |
          terraform plan \
            -var="alert_email=${{ secrets.ALERT_EMAIL }}" \
            -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID}}" \
            -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY}}" \
            -var="aws_region=${{ secrets.AWS_REGION }}" \
            -out=tfplan

      # Terraform Apply
      - name: Terraform Apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        working-directory: env/dev
        run: terraform apply -parallelism=1 -auto-approve tfplan 
    